"use client";

import React, { useState } from "react";
import { useReportStore } from "@/store/useReportStore";

export default function MalwareScanner() {
  const [file, setFile] = useState<File | null>(null);
  const [result, setResult] = useState<any | null>(null);
  const [loading, setLoading] = useState(false);
  const [showDisclaimer, setShowDisclaimer] = useState(false);
  const { addToHistory, setToolUsed } = useReportStore();

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    setFile(e.target.files?.[0] || null);
    setResult(null);
  };

  const handleScan = async () => {
    if (!file) return;
    setLoading(true);
    setResult(null);

    const formData = new FormData();
    formData.append("file", file);

    try {
      const res = await fetch("/api/malware-scan", {
        method: "POST",
        body: formData,
      });

      const data = await res.json();
      setResult(data.result);
      setToolUsed("malwareUsed");
      addToHistory({
        tool: "Malware Scanner",
        input: file.name,
        result: data.result,
      });
    } catch (err) {
      setResult({ error: "Failed to scan file." });
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="bg-gray-900 p-6 rounded-b-lg">
      <p className="text-sm text-gray-400 mb-3">
        This tool uses <strong>Hybrid Analysis</strong> to check files for malware. Data may be sent to external APIs for analysis.
        <button
          onClick={() => setShowDisclaimer(!showDisclaimer)}
          className="ml-2 underline text-blue-400 text-xs"
        >
          {showDisclaimer ? "Hide Disclaimer" : "Show Disclaimer"}
        </button>
      </p>

      {showDisclaimer && (
        <div className="bg-gray-800 text-sm text-gray-300 p-4 rounded mb-4">
          ⚠️ Files uploaded here may be shared with Hybrid Analysis (a third-party service) and stored for research and malware detection purposes. Do not upload sensitive or private data.
        </div>
      )}

      <input
        type="file"
        onChange={handleFileChange}
        className="mb-4 block text-white"
      />
      <button
        onClick={handleScan}
        disabled={!file || loading}
        className="bg-purple-600 hover:bg-purple-700 px-4 py-2 rounded text-white font-semibold disabled:opacity-50"
      >
        {loading ? "Scanning..." : "Scan File"}
      </button>

      {result && (
        <div className="mt-6 bg-gray-800 p-4 rounded text-sm text-gray-200">
          <h3 className="text-lg font-bold mb-2">Scan Result:</h3>
          <pre className="whitespace-pre-wrap">
            {JSON.stringify(result, null, 2)}
          </pre>
        </div>
      )}
    </div>
  );
}
